Sigma[ts==13.5, ts==14.2]
Sigma[ts==13.5, ts==14]
myCob(13.5, 14.2)
myCov(13.5, 14.2)
myCov(14, 14.9)
Sigma[ts==14, ts==14.9]
n <- 10000
samp <- rweibull(n, 2, 10)
nums <- rowSums(sapply(samp, function(u) (u >= ts+delta)/n))#
 denoms <- rowSums(sapply(samp, function(u) (u >= ts)/n))
for (i in 1:n) {#
   ### Evaluate the influence function at this datapoint. #
    phi_i = (samp[i] >= ts+delta)/denoms - nums*(samp[i] >= ts)/(denoms^2) #
  Sigma = Sigma + 1/n*phi_i%*%t(phi_i)#
  }
Sigma[ts==13.5, ts==14.9]
Sigma[ts==14, ts==14.9]
myCov(14, 14.9)
Sigma= matrix(0, nrow=length(ts), ncol=length(ts))
for (i in 1:n) {#
    ### Evaluate the influence function at this datapoint. #
     phi_i = (samp[i] >= ts+delta)/denoms - nums*(samp[i] >= ts)/(denoms^2) #
   Sigma = Sigma + 1/n*phi_i%*%t(phi_i)#
   }
x <- seq(0,1,by=0.01)
x
density <- dbeta(x, 1/2, 1/2)
newx <- 1-(1-x)^6
plot(newx, density, type='l')
tryx <- rbeta(1000,1/2,1/2)
p <- 1-(1-tryx)^6
hist(p)
tryx <- rbeta(1000,1,10)
p <- 1-(1-tryx)^6
hist(p)
X <- mvrnorm(100, mu=rep(0,8), Sigma = diag(rep(1,7)))
X <- MASS::mvrnorm(100, mu=rep(0,8), Sigma = diag(rep(1,7)))
X <- MASS::mvrnorm(100, mu=rep(0,8), Sigma = diag(rep(1,8)))
y <- rnorm(n, mean=0, sd=17)
y <- rnorm(100, mean=0, sd=17)
rpart::base_tree <- rpart(y~X, control=rpart.control(maxdepth = 2,#
                                                minsplit=2, minbucket=1,#
                                                cp=-1,#
                                                maxsurrogate = 0,#
                                                maxcompete=0))
base_tree <- rpart::rpart(y~X, control=rpart.control(maxdepth = 2,#
                                                minsplit=2, minbucket=1,#
                                                cp=-1,#
                                                maxsurrogate = 0,#
                                                maxcompete=0))
library(rpart)
base_tree <- rpart::rpart(y~X, control=rpart.control(maxdepth = 2,#
                                                minsplit=2, minbucket=1,#
                                                cp=-1,#
                                                maxsurrogate = 0,#
                                                maxcompete=0))
nu <- (base_tree$where==3)/sum((base_tree$where==3)) - (base_tree$where==4)/sum(base_tree$where==4)
nu
Pi_perp <- diag(rep(1,n)) - nu%*%t(nu)/sum(nu^2)
Pi_perp <- diag(rep(1,100)) - nu%*%t(nu)/sum(nu^2)
mat1 <- Pi_perp%*%y%*%t(nu)
mat1
mat2 <- nu%*%t(y)%*%Pi_perp
mat1==mat2
mat1[1,]
mat1[2,]
all.equal(y%*%t(nu), nu%*%t(y))
y%*%t(nu)
all.equal(y%*%t(nu), t(nu%*%t(y)))
dim(y%*%t(nu))
dim(nu%*%t(y))
(y%*%t(nu))[17,17]
(nu%*%t(y))[17,17]
(nu%*%t(y))[34,17]
(y%*%t(nu))[34,17]
(y%*%t(nu))[17,34]
mat1
mat1==t(mat2)
mat1 <- Pi_perp%*%y%*%t(nu)
mat2 <- nu%*%t(y)%*%Pi_perp
mat1==t(mat2)
Pi_perp==t(Pi_perp)
cheese = y%*%t(nu)
t(cheese)
t(cheese) == nu%*%t(y)
mat_1 <- Pi_perp%*%cheese
mat_1 == t(cheese)%*%Pi_per
mat_1 == t(cheese)%*%Pi_perp
t(mat_1) == t(cheese)%*%Pi_perp
t(mat_1) == mat2
fullZ <- c(0.2, 0.5, 0.3)
d=3
tmp1 <- rgamma(3, 1/d+fullZ, 1)
temp1
tmp1
tmp1 <- rep(rgamma(3, 1/d+fullZ, 1),10000)
tmp1
tmp1 <- matrix(gamma(30000, 1/d+fullZ, 1), ncol=3, byrow=T)
tmp1 <- matrix(rgamma(30000, 1/d+fullZ, 1), ncol=3, byrow=T)
tmp2 <- rdirichlet(1, 1/d+fullZ)
library(truncnorm)
ls
qtruncnorm(1.96)
qtruncnorm(0.975)
ptruncnorm(2, a=1, b=3, mean=0)
ptruncnorm(2, a=1.98, b=2.02, mean=0)
ptruncnorm(2, a=1.98, b=2.02, mean=-1)
ptruncnorm(2, a=1.98, b=2.02, mean=-2)
ptruncnorm(2, a=1.98, b=2.02, mean=-3)
ptruncnorm(2, a=1.98, b=2.02, mean=-4)
ptruncnorm(2, a=1, b=3, mean=-1)
ptruncnorm(2, a=1, b=3, mean=-2)
ptruncnorm(2, a=1, b=3, mean=-3)
ptruncnorm(2, a=1, b=3, mean=-4)
res <- read.csv("Ordered_CI_res.csv", sep=" ", header=FALSE)
res <- read.csv("~/Simple Sanity Checks/Ordered_CI_res.csv", sep=" ", header=FALSE)
names(res) <- c("bound1", "bound2", "bound1c", "bound2c", "low1", "up1", "low2", "up2", "truth")
head(res)
res %>% mutate(success1 = low1 < truth & up1 > truth)
library(tidyverse)
res %>% mutate(success1 = low1 < truth & up1 > truth)
res <- res %>% mutate(success1 = low1 < truth & up1 > truth, success2 = low2 < truth & up2 > truth)
head(res)
mean(res$success1)
mean(res$success2)
all.equal(res$success1, res$success2)
mean(res$up1-res$low1)
mean(res$up2-res$low2)
res <- read.csv("~/Simple Sanity Checks/Ordered_CI_res.csv", sep=" ", header=FALSE)
names(res) <- c("bound1", "bound2", "bound1c", "bound2c", "low1", "up1", "low2", "up2", "truth")
res <- res %>% mutate(success1 = low1 < truth & up1 > truth, success2 = low2 < truth & up2 > truth)
mean(res$success1)
mean(res$success2)
all.equal(res$success1, res$success2)
mean(res$up2-res$low2)
mean(res$up1-res$low1)
median(res$bound1)
median(res$bound2)
max(res$up2-res$low2)
max(res$up1-res$low1)
res <- read.csv("~/Simple Sanity Checks/Ordered_CI_res.csv", sep=" ", header=FALSE)#
names(res) <- c("bound1", "bound2", "bound1c", "bound2c", "low1", "up1", "low2", "up2", "truth")#
res <- res %>% mutate(success1 = low1 < truth & up1 > truth, success2 = low2 < truth & up2 > truth)#
mean(res$success1)#
mean(res$success2)#
all.equal(res$success1, res$success2)#
 mean(res$up2-res$low2)#
#
 mean(res$up1-res$low1)#
#
 median(res$bound1)#
#
 median(res$bound2)#
#
 max(res$up2-res$low2)#
#
 max(res$up1-res$low1)
load("~/1028_sim.Rdata")
head(results)
results[1,]
max(results[,3])
load("~/1028_sim.Rdata")
head(results)
max(results[,3])
names(results) <- c("baseline_p",    ### Fix for now#
                    "n.clinics",#
                    "n.patients",#
                    "estPower",#
                    "sdClinic", #
                    "sdProvider", #
                    "pRE",#
                    "clinicRE",#
                    "patientCov", ### Fix for now at "yes". #
                    "tooManyCov")
results <- data.frame(results)
head(results)
names(results) <- c("baseline_p",    ### Fix for now#
                    "n.clinics",#
                    "n.patients",#
                    "estPower",#
                    "sdClinic", #
                    "sdProvider", #
                    "pRE",#
                    "clinicRE",#
                    "patientCov", ### Fix for now at "yes". #
                    "tooManyCov")
head(reuslts)
head(results)
results <- data.frame(results)#
names(results) <- c("baseline_p",    #
                    "n.clinics",#
                    "n.patients",#
                    "estPower",#
                    "clinicRE", "pRE",#
                    "sdClinic", #
                    "sdProvider",#
                    "patientCov", ### Fix for now at "yes". #
                    "tooManyCov")
head(results)
max(results$sdClinic)
max(results$sdProvider)
max(results$estPower)
load("~/1028_sim.Rdata")
results <- data.frame(results)
results <- data.frame(results)#
names(results) <- c("baseline_p",    #
                    "n.clinics",#
                    "n.patients",#
                    "estPower",#
                    "clinicRE", "pRE",#
                    "sdClinic", #
                    "sdProvider",#
                    "patientCov", ### Fix for now at "yes". #
                    "tooManyCov")
max(results$estPower)
max(results$sdProvider)
max(results$sdClinic
)
load("~/1028_sim.Rdata")
results <- data.frame(results)
results <- data.frame(results)#
names(results) <- c("baseline_p",    #
                    "n.clinics",#
                    "n.patients",#
                    "estPower",#
                    "clinicRE", "pRE",#
                    "sdClinic", #
                    "sdProvider",#
                    "patientCov", ### Fix for now at "yes". #
                    "tooManyCov")
max(results$estPower)
ax(results$sdProvider)
max(results$sdProvider)
max(results$sdClinic)
library(tidyverse)
results %>% filter(n.clinics != 0) %>% summarize(n())
results %>% filter(n.clinics != 0) %>% group_by(n.clinics, n.patients) %>% summarize(n())
results %>% filter(n.clinics != 0) %>% group_by(n.clinics, n.patients) %>% summarize(max(estPower))
results %>% filter(n.clinics != 0) %>% group_by(n.patients) %>% summarize(max(estPower))
results %>% filter(n.clinics != 0, n.patients==500) %>% group_by(n.clinics) %>% summarize(max(estPower))
load("~/1028_sim.Rdata")
results <- data.frame(results)
results <- data.frame(results)#
names(results) <- c("baseline_p",    #
                    "n.clinics",#
                    "n.patients",#
                    "estPower",#
                    "clinicRE", "pRE",#
                    "sdClinic", #
                    "sdProvider",#
                    "patientCov", ### Fix for now at "yes". #
                    "tooManyCov")
head(results)
results %>% filter(n.clinics != 0) %>% group_by(n.clinics, n.patients) %>% summarize(n())
results %>% filter(n.clinics != 0) %>% group_by(sdClinic,sdProvider) %>% summarize(n())
load("~/1028_sim.Rdata")
results <- data.frame(results)
results <- data.frame(results)#
names(results) <- c("baseline_p",    #
                    "n.clinics",#
                    "n.patients",#
                    "estPower",#
                    "clinicRE", "pRE",#
                    "sdClinic", #
                    "sdProvider",#
                    "patientCov", ### Fix for now at "yes". #
                    "tooManyCov")
results %>% filter(n.clinics != 0) %>% group_by(sdClinic,sdProvider) %>% summarize(n())
load("~/1028_sim.Rdata")
results <- data.frame(results)
results <- data.frame(results)#
names(results) <- c("baseline_p",    #
                    "n.clinics",#
                    "n.patients",#
                    "estPower",#
                    "clinicRE", "pRE",#
                    "sdClinic", #
                    "sdProvider",#
                    "patientCov", ### Fix for now at "yes". #
                    "tooManyCov")
results %>% filter(n.clinics != 0) %>% group_by(sdClinic,sdProvider) %>% summarize(n())
load("~/1028_sim.Rdata")
results <- data.frame(results)
results <- data.frame(results)#
names(results) <- c("baseline_p",    #
                    "n.clinics",#
                    "n.patients",#
                    "estPower",#
                    "clinicRE", "pRE",#
                    "sdClinic", #
                    "sdProvider",#
                    "patientCov", ### Fix for now at "yes". #
                    "tooManyCov")
results %>% filter(n.clinics != 0) %>% group_by(sdClinic,sdProvider) %>% summarize(n())
load("~/1028_sim.Rdata")#
> results <- data.frame(results)#
> results <- data.frame(results)#
> names(results) <- c("baseline_p",    #
                    "n.clinics",#
                     "n.patients",#
                     "estPower",#
                     "clinicRE", "pRE",#
                     "sdClinic", #
                     "sdProvider",#
                     "patientCov", ### Fix for now at "yes". #
                     "tooManyCov")
load("~/1028_sim.Rdata")#
> results <- data.frame(results)#
> results <- data.frame(results)#
> names(results) <- c("baseline_p",    #
                    "n.clinics",#
                     "n.patients",#
                     "estPower",#
                     "clinicRE", "pRE",#
                     "sdClinic", #
                     "sdProvider",#
                     "patientCov",  #
                     "tooManyCov")
load("~/1028_sim.Rdata")#
> results <- data.frame(results)#
> results <- data.frame(results)#
> load("~/1028_sim.Rdata")#
> results <- data.frame(results)#
> results <- data.frame(results)#
> names(results) <- c("baseline_p",    #
+                     "n.clinics",#
+                     "n.patients",#
+                     "estPower",#
+                     "clinicRE", "pRE",#
+                     "sdClinic", #
+                     "sdProvider",#
+                     "patientCov", ### Fix for now at "yes". #
+                     "tooManyCov")
names(results) <- c("baseline_p",    #
+                     "n.clinics",#
+                     "n.patients",#
+                     "estPower",#
+                     "clinicRE", "pRE",#
+                     "sdClinic", #
+                     "sdProvider",#
+                     "patientCov", ### Fix for now at "yes". #
+                     "tooManyCov")
names(results) <- c("baseline_p",    #
                     "n.clinics",#
                     "n.patients",#
                     "estPower",#
                     "clinicRE", "pRE",#
                     "sdClinic", #
                     "sdProvider",#
                     "patientCov", ### Fix for now at "yes". #
                     "tooManyCov")
max(results$estPower)
results <- data.frame(results)
names(results) <- c("baseline_p",    #
                     "n.clinics",#
                     "n.patients",#
                     "estPower",#
                     "clinicRE", "pRE",#
                     "sdClinic", #
                     "sdProvider",#
                     "patientCov", ### Fix for now at "yes". #
                     "tooManyCov")
max(results$estPower)
which.max(results$estPower)
results[875,]
results[876,]
results %>% filter(n.patients==500, clinicRE==0,pRE=0)
results %>% filter(n.patients==500, clinicRE==0,pRE==0)
results %>% filter(n.patients==500, clinicRE==0,pRE==0,sdClinic==0)
load("~/1028_sim.Rdata")
max(results[,4])
load("~/1028_sim.Rdata")
max(results[,4])
results <-data.frame(results)
names(results) <- c("baseline_p",    #
                     "n.clinics",#
                     "n.patients",#
                     "estPower",#
                     "clinicRE", "pRE",#
                     "sdClinic", #
                     "sdProvider",#
                     "patientCov", ### Fix for now at "yes". #
                     "tooManyCov")
results %>% filter(n.patients==500, clinicRE==0,pRE==0,sdClinic==0)
results %>% filter(n.patients==500, clinicRE==0,pRE==0,sdClinic==0.5)
results %>% filter(n.patients==500, sdClinic==0.5)
load("~/1028_sim.Rdata")
max(result[.4])
max(results[,4])
results %>% filter(n.clinics!=0) %>% summarize(n())
results <- as.data.frame(results)
names(results) <- c("baseline_p",    #
                     "n.clinics",#
                     "n.patients",#
                     "estPower",#
                     "clinicRE", "pRE",#
                     "sdClinic", #
                     "sdProvider",#
                     "patientCov", ### Fix for now at "yes". #
                     "tooManyCov")
results %>% filter(n.clinics!=0) %>% summarize(n())
results %>% group_by(sdClinic, sdProvider) %>% summarize(n())
exp(0.05)
exp(0.05*7)
load("1104_sim_DAQ0.20.05")
head(results)
results <- data.frame(results)
head(results)
names(results) <- c("baseline_p",    #
                    "n.clinics",#
                    "n.patients",#
                    "estPower",#
                    "sdClinic", #
                    "sdProvider",#
                    "var",#
                    "effectSize")
max(results$sdClinic)
table(results$sdClinic)
table(results$sdProvider)
results <- results[varName != 0,]
results <- results[var != "0",]
results <- results[var !="0,]
""
"
results <- results[var !=0,]
table(results$var)
results <- results[results$var !=0,]
table(results$var)
table(results$sdClinic)
table(results$sdProvider)
cheese <- c("cat",  "cog","cheese")
cheese
na <- 5
nb <- 7
vec <- c(rep(nb/(na+nb), na), rep(-na/(na+nb)))
vec
vec <- c(rep(nb/(na+nb), na), rep(-na/(na+nb), nb))
vec
vec2 <- c(1/na, na), rep(-1/nb, nb))
vec2 <- c(rep(1/na, na), rep(-1/nb, nb))
vec2/vec1
vec2/vec
1/RA
1/na
(na+nb)/(na*nb)
dims <- seq(1,20,by=1)
Ns <- c(20,50,100,300,500,1000,10000)
dims <- rep(dims,length(Ns))
dims
setwd("~/treevalues")
pkgdown::build_site()

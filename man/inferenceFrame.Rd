% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting_functions.R
\name{inferenceFrame}
\alias{inferenceFrame}
\title{This function can optionally be used prior to running ``treeval.plot`` to make ``treeval.plot`` run more efficiently.}
\usage{
inferenceFrame(
  tree,
  sigma_y = sd(tree$model[, 1]),
  CI = TRUE,
  alpha = 0.05,
  digits = 3,
  permute = FALSE
)
}
\arguments{
\item{tree}{The tree that you will be plotting.}

\item{sigma_y}{The standard deviation of the response. If known, should be provided. Otherwise, a convervative estiamte (the sample
standard deviation of the response) is used.}

\item{CI}{Boolean. Should confidence intervals be computed? As confidence intervals are inefficient to compute, this should be set to
``FALSE`` if you intend to make a plot that does not display confidence intervals.}

\item{alpha}{If ``CI=TRUE``, the confidence intervals that are computed will be (1-alpha) confidence intervals.}

\item{digits}{Integer. The number of digits that the p-values and confidence intervals will be rounded to in the later plot.}

\item{permute}{If ``CI=TRUE``, this boolean says whether or not the}
}
\value{
An rpart object. Identical to ``tree`` expect that now ``tree$frame`` has two extra columns; one storing p-values for splits and the other
storing confidence intervals for regions. If this object is passed in to ``treeval.plot``, the plots will be made more efficiently.
}
\description{
This function is computationally expensive, especially if ``CI=TRUE`` and/or ``permute=TRUE``. Ths function is called internally by ``treeval.plot``,
as it updates ``tree$frame`` to store information (pvalues and confidence intervals) that will be printed
internally by ``treeval.plot``.
}
